name: Auto Lotto Draw Update

on:
  schedule:
    - cron: '*/5 * * * *'   # 5분마다 실행 (UTC 기준)
  push:
    branches: [main]         # main 브랜치에 push될 때 워크플로우 실행
  workflow_dispatch:         # 수동 실행도 가능

permissions:
  contents: write            # <-- 이 줄이 꼭 있어야 github-actions[bot]이 push 가능!

jobs:
  update-lotto-draw:
    runs-on: ubuntu-latest   # Ubuntu 최신 환경에서 실행

    steps:
      # 1. 저장소 코드를 체크아웃(가져오기)
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Python 3.11 환경 세팅
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3. requirements.txt가 있으면 설치, 없으면 무시
      - name: Install dependencies (ignore if requirements.txt is missing)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # 4. 최신 로또 회차 번호를 추출하여 JSON 파일로 저장
      - name: Run last_lotto_round_number.py
        run: |
          python src/last_lotto_round_number.py

      # 5. 실제로 파일이 생성됐는지 확인 (디버깅용)
      - name: List draw_no directory after round number script
        run: |
          ls -al src/src/constant/draw_no || true

      # 6. 필수 파일이 없으면 워크플로우 중단
      - name: Check if latest_round_no.json exists
        run: |
          if [ ! -f "src/src/constant/round_no/latest_round_no.json" ]; then
            echo "ERROR: latest_round_no.json not found!"
            exit 1
          fi

      # 7. jq로 JSON에서 최신 회차 번호 추출, 환경변수로 저장
      - name: Get latest round number from JSON
        id: get_round
        run: |
          LATEST_ROUND=$(jq '.latest_round_no' src/src/constant/round_no/latest_round_no.json)
          echo "LATEST_ROUND=$LATEST_ROUND" >> $GITHUB_ENV
          echo "Latest round number: $LATEST_ROUND"

      # 8. 해당 회차의 JSON 파일이 이미 존재하는지 확인
      - name: Check if draw JSON exists
        id: check_draw
        run: |
          if [ -f "src/src/constant/draw_no/${{ env.LATEST_ROUND }}.json" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      # 9. 파일이 없으면 파싱 스크립트 실행하여 JSON 생성
      - name: Generate draw JSON if missing
        if: steps.check_draw.outputs.exists == 'false'
        run: |
          python src/lotto_number_parser.py ${{ env.LATEST_ROUND }}

      # 10. 새 파일이 생겼을 때만 git add/commit/push
      - name: Git add, commit, and push (if new file)
        if: steps.check_draw.outputs.exists == 'false'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Add lotto draw ${{ env.LATEST_ROUND }}.json (auto-update)"
          git push
